CREATE DATABASE Myego;
USE Myego;
CREATE TABLE MYBrokenEgo(
id INT PRIMARY KEY,
name VARCHAR(255)
);
Insert into MyBrokenEgo values(1,'Faranaz');
Insert into MyBrokenEgo values(2,'Egoistic');

SELECT * From MyBrokenEgo;

CREATE DATABASE IF NOT EXISTS ORG;
SHOW DATABASES;
USE ORG;
CREATE TABLE Worker(
WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME CHAR(25),
LAST_NAME CHAR(25),
SALARY INT(15),
JOINING_DATE DATETIME,
DEPARTMENT CHAR(25)
);

INSERT INTO Worker (WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT) VALUES 
(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
(008, 'Geetik ','Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

SELECT * FROM Worker;

SELECT 44+11;
SELECT now();
SELECT * FROM Worker where SALARY>100000;

SELECT * FROM Worker WHERE DEPARTMENT='HR';

SELECT * FROM Worker WHERE SALARY between 80000 AND 100000;

CREATE TABLE Bonus(
WORK_REF_ID INT,
BONUS_AMOUNT INT(10),
BONUS_TIME DATETIME,
FOREIGN KEY (WORK_REF_ID) 
	REFERENCES Worker (WORKER_ID)
    ON delete CASCADE
);

INSERT INTO Bonus(WORK_REF_ID, BONUS_AMOUNT, BONUS_TIME) VALUES
(001, 5000, '16-02-20'),
(002, 3000, '16-06-11'),
(003, 4000, '16-02-20'),
(001, 4500, '16-02-20'),
(002, 3500, '16-06-11');

SELECT * FROM Bonus;

CREATE TABLE Title (
WORKER_REF_ID INT,
WORKER_TITLE CHAR(25),
AFFECTED_FROM DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker (WORKER_ID)
ON DELETE CASCADE
);
INSERT INTO Title(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
(001, 'Manager', '2016-02-20 00:00:00'),
(002, 'Executive', '2016-06-11 00:00:00'),
(008, 'Executive', '2016-06-11 00:00:00'),
(005, 'Manager', '2016-06-11 00:00:00'),
(004, 'Asst. Manager', '2016-06-11 00:00:00'),
(007, 'Executive', '2016-06-11 00:00:00'),
(006, 'Lead', '2016-06-11 00:00:00'),
(003, 'Lead', '2016-06-11 00:00:00');









SELECT * FROM Worker;

SELECT FIRST_NAME,SALARY FROM Worker;
-- reduce OR statement
-- HR OR ADMIN
SELECT * FROm Worker WHERE DEPARTMENT= 'HR' OR DEPARTMENT= 'ADMIN' OR DEPARTMENT='Account'; -- This is Tediace Process so 

-- Better Way is to Use In Keyword
SELECT * FROm Worker WHERE DEPARTMENT IN('HR','ADMIN','Account');

-- NOT in HR ADMIN

SELECT * FROM Worker WHERE DEPARTMENT NOT IN ('HR','ADMIN');

-- IS NULL

-- WILDCARDS
SELECT * FROM Worker WHERE FIRST_NAME LIKE '%a%';
SELECT * FROm Worker WHERE FIRST_NAME LIKE '%i_';

-- SORTING USIng ORDER BY
SELECT * FROM Worker ORDER BY SALARY ASC;
SELECT * FROM Worker ORDEr BY SALARY DESC;

-- DISTINCT 
SELECT DISTINCT Department FROM worker; 

-- GROUP BY
-- FIND no of emp wrt DEpartment
SELECT DEPARTMENT, COUNT(*) FROM WORKER GROUP BY DEPARTMENT ;
SELECT DEPARTMENT ,COUNT(DEPARTMENT) FROM WORKER GROUP By DEPARTMENT;
-- AVG
SELECT DEPARTMENT ,AVG(SALARY) FROM WORKER GROUP BY DEPARTMENT;
-- Min
SELECT DEPARTMENT, min(SALARY) FROm WORKER GROUP BY DEPARTMENT;
-- max
SELECT DEPARTMENT,max(SALARY) AS SALARY_MIN FROm WOrker GROUP BY DEPARTMENT;
-- sum
SELECT DEPARTMENT,sum(SALARY) FROM Worker GROUP BY DEPARTMENT;

-- GROUP BY HAVING
-- DEPARTMENT COUNT having more than 2 worker

SELECT DEPARTMENT,count(DEPARTMENT) FROm WOrker GROUP BY DEPARTMENT having Count(DEPARTMENT) > 2;

